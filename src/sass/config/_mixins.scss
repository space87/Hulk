//@import 'variables';
@mixin gridType($size) {


   @for $i from 1 to $columns+1 {
       .col-#{$size}-#{$i} {
           @if($legacy != true) {
             @extend %column;  
           } @else {
             @extend %columnLegacy;  
           }
               
       }
    
        .col-#{$size}-offset-#{$i} {
            @if($legacy != true) {
                @extend %column;  
            } @else {
                @extend %columnLegacy;   
            }   
        }
       
   }

    
    
}


@mixin grid($size) {
    
  @for $i from 1 to $columns+1 {
      
      
      .col-#{$size}-#{$i} {
          
         width: (((100 / $columns) * $i) * 1%);
         max-width: (((100 / $columns) * $i) * 1%);
          
      }
    
        .col-#{$size}-offset-#{$i} {
            margin-left: (((100 / $columns) * $i) * 1%);
            
        }
      
  }
    
}

@mixin respond-to($breakpoint) {
    
    @if map-has-key($breakPoints, $breakpoint) {
        
        @media (min-width: #{map-get($breakPoints,$breakpoint)}) {
            @content;    
        }
        
    }

    @else {
        
        @warn "Unfortunately, no value could be retrieved from '#{$breakpoint}'. " + "Please make sure it is defined in the $breakPoints map";
        
        
    }
    
}
